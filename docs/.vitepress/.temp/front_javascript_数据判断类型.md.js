import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.cc2b3d55.js";
const __pageData = JSON.parse('{"title":"判断数据类型的方案","description":"","frontmatter":{"sidebar":{"title":"判断数据类型的方案","step":3},"isTimeLine":true,"title":"判断数据类型的方案","date":"2020-04-14T00:00:00.000Z","tags":["大前端","javascript"],"categories":["大前端"]},"headers":[],"relativePath":"front/javascript/数据判断类型.md","filePath":"front/javascript/数据判断类型.md","lastUpdated":1700532797000}');
const _sfc_main = { name: "front/javascript/数据判断类型.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="判断数据类型的方案" tabindex="-1">判断数据类型的方案 <a class="header-anchor" href="#判断数据类型的方案" aria-label="Permalink to &quot;判断数据类型的方案&quot;">​</a></h1><h2 id="判断变量类型的方案" tabindex="-1">判断变量类型的方案 <a class="header-anchor" href="#判断变量类型的方案" aria-label="Permalink to &quot;判断变量类型的方案&quot;">​</a></h2><h3 id="_1-typeof" tabindex="-1">1. typeof <a class="header-anchor" href="#_1-typeof" aria-label="Permalink to &quot;1. typeof&quot;">​</a></h3><ul><li>对于原始值类型除了null外都可以准确判断</li><li>对于对象来说，除了函数都会显示 object <ul><li><code>null</code>不是对象</li></ul></li></ul><div class="tip custom-block"><p class="custom-block-title">原始值类型</p><ul><li>number</li><li>string</li><li>boolean</li><li>symbol</li><li>undefined</li><li>null <code>不能使用typeof正确判断</code></li></ul></div><h3 id="_2-instanceof" tabindex="-1">2. instanceof <a class="header-anchor" href="#_2-instanceof" aria-label="Permalink to &quot;2. instanceof&quot;">​</a></h3><ul><li>通过原型链进行判断</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">[] </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">instanceof</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">Array</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">{} </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">instanceof</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">Object</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#F97583" })}">new</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">String</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">&#39;sss&#39;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">) </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">instanceof</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">String</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">[] </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">instanceof</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">Array</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">{} </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">instanceof</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">Object</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#D73A49" })}">new</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">String</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">&#39;sss&#39;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">) </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">instanceof</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">String</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// true</span></span></code></pre></div><ul><li>通过instanceof判断string值类型的方法 <ul><li>Symbol.hasInstance能够让我们自定义函数的行为</li></ul></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#F97583" })}">class</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">myString</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">static</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> [Symbol.hasInstance](</span><span style="${ssrRenderStyle({ "color": "#FFAB70" })}">str</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">return</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">typeof</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> str </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">===</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">&#39;string&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">&#39;ss&#39;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">instanceof</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">myString</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#D73A49" })}">class</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">myString</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">static</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> [Symbol.hasInstance](</span><span style="${ssrRenderStyle({ "color": "#E36209" })}">str</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">return</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">typeof</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> str </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">===</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#032F62" })}">&#39;string&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#032F62" })}">&#39;ss&#39;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">instanceof</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">myString</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// true</span></span></code></pre></div><h3 id="_3-string-prototype-tostring" tabindex="-1">3. String.prototype.toString <a class="header-anchor" href="#_3-string-prototype-tostring" aria-label="Permalink to &quot;3. String.prototype.toString&quot;">​</a></h3><blockquote><p>Object.prototype.toString方法返回对象的类型字符串，因此可以用来判断一个值的类型</p></blockquote><p>不同对象都定义了自己的toString方法</p><p>不同数据类型的Object.prototype.toString方法返回值如下：</p><ul><li>数值：返回[object Number]。</li><li>字符串：返回[object String]。</li><li>布尔值：返回[object Boolean]。</li><li>undefined：返回[object Undefined]。</li><li>null：返回[object Null]。</li><li>数组：返回[object Array]。</li><li>arguments 对象：返回[object Arguments]。</li><li>函数：返回[object Function]。</li><li>Error 对象：返回[object Error]。</li><li>Date 对象：返回[object Date]。</li><li>RegExp 对象：返回[object RegExp]。</li><li>其他对象：返回[object Object]。</li></ul><p>所以可以通过<code>.call</code>方法改变<code>this</code>的指向以达到判断的目的</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">Object</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">call</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">2</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">) </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;[object Number]&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">Object</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">call</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">&#39;&#39;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">) </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;[object String]&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">Object</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">call</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">true</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">) </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;[object Boolean]&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">Object</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">call</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">undefined</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">) </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;[object Undefined]&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">Object</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">call</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">null</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">) </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;[object Null]&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">Object</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">call</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(Math) </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;[object Math]&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">Object</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">call</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">({}) </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;[object Object]&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">Object</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">call</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">([]) </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;[object Array]&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#005CC5" })}">Object</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">call</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">2</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">) </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;[object Number]&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#005CC5" })}">Object</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">call</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">&#39;&#39;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">) </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;[object String]&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#005CC5" })}">Object</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">call</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">true</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">) </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;[object Boolean]&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#005CC5" })}">Object</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">call</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">undefined</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">) </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;[object Undefined]&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#005CC5" })}">Object</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">call</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">null</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">) </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;[object Null]&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#005CC5" })}">Object</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">call</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(Math) </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;[object Math]&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#005CC5" })}">Object</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">call</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">({}) </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;[object Object]&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#005CC5" })}">Object</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">call</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">([]) </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;[object Array]&quot;</span></span></code></pre></div><h2 id="书写一个通用的" tabindex="-1">书写一个通用的 <a class="header-anchor" href="#书写一个通用的" aria-label="Permalink to &quot;书写一个通用的&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#F97583" })}">function</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">type</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> (</span><span style="${ssrRenderStyle({ "color": "#FFAB70" })}">o</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">  </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">var</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> s </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">Object</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">call</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(o);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">  </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">return</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> s.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">match</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">/</span><span style="${ssrRenderStyle({ "color": "#85E89D", "font-weight": "bold" })}">\\[</span><span style="${ssrRenderStyle({ "color": "#DBEDFF" })}">object (</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">.</span><span style="${ssrRenderStyle({ "color": "#F97583" })}">*?</span><span style="${ssrRenderStyle({ "color": "#DBEDFF" })}">)</span><span style="${ssrRenderStyle({ "color": "#85E89D", "font-weight": "bold" })}">\\]</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">/</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">)[</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">1</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">].</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">toLowerCase</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">};</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#B392F0" })}">type</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">({}); </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;object&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#B392F0" })}">type</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">([]); </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;array&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#B392F0" })}">type</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">5</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">); </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;number&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#B392F0" })}">type</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">null</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">); </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;null&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#B392F0" })}">type</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(); </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;undefined&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#B392F0" })}">type</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">/</span><span style="${ssrRenderStyle({ "color": "#DBEDFF" })}">abcd</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">/</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">); </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;regex&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#B392F0" })}">type</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#F97583" })}">new</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">Date</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">()); </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;date&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#D73A49" })}">function</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">type</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E36209" })}">o</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">  </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">var</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> s </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">Object</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">.toString.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">call</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(o);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">  </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">return</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> s.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">match</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">/</span><span style="${ssrRenderStyle({ "color": "#22863A", "font-weight": "bold" })}">\\[</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">object (</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">.</span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">*?</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">)</span><span style="${ssrRenderStyle({ "color": "#22863A", "font-weight": "bold" })}">\\]</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">/</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">)[</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">1</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">].</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">toLowerCase</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">};</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">type</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">({}); </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;object&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">type</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">([]); </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;array&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">type</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">5</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">); </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;number&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">type</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">null</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">); </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;null&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">type</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(); </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;undefined&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">type</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">/abcd/</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">); </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;regex&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">type</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">new</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">Date</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">()); </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// &quot;date&quot;</span></span></code></pre></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("front/javascript/数据判断类型.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const ______ = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  ______ as default
};
