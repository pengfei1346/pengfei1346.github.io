import { ssrRenderAttrs, ssrRenderAttr, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.cc2b3d55.js";
const _imports_0 = "/assets/img.2b249e26.png";
const _imports_1 = "/assets/img_2.59fc00d5.png";
const _imports_2 = "/assets/img_3.29862b6c.png";
const _imports_3 = "/assets/img_4.dac4d5b1.png";
const _imports_4 = "/assets/img_1.28530e6e.png";
const __pageData = JSON.parse('{"title":"部署更新通知","description":"","frontmatter":{"sidebar":null,"title":"部署更新通知","isTimeLine":true,"date":"2024-01-14T00:00:00.000Z","tags":null},"headers":[],"relativePath":"note/case/部署更新通知.md","filePath":"note/case/部署更新通知.md","lastUpdated":1722234997000}');
const _sfc_main = { name: "note/case/部署更新通知.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="部署更新通知" tabindex="-1">部署更新通知 <a class="header-anchor" href="#部署更新通知" aria-label="Permalink to &quot;部署更新通知&quot;">​</a></h1><h2 id="部署更新通知-1" tabindex="-1">部署更新通知 <a class="header-anchor" href="#部署更新通知-1" aria-label="Permalink to &quot;部署更新通知&quot;">​</a></h2><p>前端的静态资源会缓存在浏览器内存中，且在整个使用过程中通常不会自动重新加载。这种特性意味着如果应用有新的版本发布，用户可能仍在使用旧版本，无法立即获得最新的功能、修复或安全更新。</p><p>期望： 每次发布之后，提示用户系统有更新。</p><p><img${ssrRenderAttr("src", _imports_0)} alt="img.png"></p><h2 id="方案选择" tabindex="-1">方案选择 <a class="header-anchor" href="#方案选择" aria-label="Permalink to &quot;方案选择&quot;">​</a></h2><h3 id="_1、比较构建文件的hash值" tabindex="-1">1、比较构建文件的hash值 <a class="header-anchor" href="#_1、比较构建文件的hash值" aria-label="Permalink to &quot;1、比较构建文件的hash值&quot;">​</a></h3><p>配置webpack/vite打包时生成hash值，通过对比hash值判断是否有更新。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 存储当前脚本标签的哈希值集合</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#F97583" })}">let</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> scriptHashes </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">new</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">Set</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#F97583" })}">let</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> timer </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">undefined</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}">/**</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> * 从首页获取脚本标签的哈希值集合</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> * </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">@returns</span><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">{Promise&lt;Set&lt;string&gt;&gt;}</span><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> 返回包含脚本标签的哈希值的集合</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#F97583" })}">async</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">function</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">fetchScriptHashes</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 获取首页HTML内容</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">const</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">html</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">await</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">fetch</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">&#39;/&#39;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">).</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">then</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">((</span><span style="${ssrRenderStyle({ "color": "#FFAB70" })}">res</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">) </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> res.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">text</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">());</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 正则表达式匹配所有&lt;script&gt;标签</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">const</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">scriptRegex</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">/&lt;</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">script</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#F97583" })}">?:</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">\\s</span><span style="${ssrRenderStyle({ "color": "#F97583" })}">+</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">[</span><span style="${ssrRenderStyle({ "color": "#F97583" })}">^&gt;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">]</span><span style="${ssrRenderStyle({ "color": "#F97583" })}">*</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">)</span><span style="${ssrRenderStyle({ "color": "#F97583" })}">?&gt;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(.</span><span style="${ssrRenderStyle({ "color": "#F97583" })}">*?</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">)</span><span style="${ssrRenderStyle({ "color": "#F97583" })}">&lt;</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">/</span><span style="${ssrRenderStyle({ "color": "#DBEDFF" })}">script</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">\\s</span><span style="${ssrRenderStyle({ "color": "#F97583" })}">*</span><span style="${ssrRenderStyle({ "color": "#DBEDFF" })}">&gt;</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">/</span><span style="${ssrRenderStyle({ "color": "#F97583" })}">gi</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 获取匹配到的所有&lt;script&gt;标签内容</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    const scripts </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> html.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">match</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(scriptRegex) </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">??</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> [];</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 将脚本标签内容存入集合并返回</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    return </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">new</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">Set</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(scripts);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}">/**</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> * 比较当前脚本标签的哈希值集合与新获取的集合，检测是否有更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#F97583" })}">async</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">function</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">compareScriptHashes</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 获取新的脚本标签哈希值集合</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">const</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">newScriptHashes</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">await</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">fetchScriptHashes</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">();</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">if</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> (scriptHashes.size </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">===</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">0</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 初次运行时，存储当前脚本标签哈希值</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        scriptHashes </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> newScriptHashes;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    } </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">else</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">if</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> (</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        scriptHashes.size </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">!==</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> newScriptHashes.size </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">||</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">!</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">[</span><span style="${ssrRenderStyle({ "color": "#F97583" })}">...</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">scriptHashes].</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">every</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">((</span><span style="${ssrRenderStyle({ "color": "#FFAB70" })}">hash</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">) </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> newScriptHashes.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">has</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(hash))</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    ) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 如果脚本标签数量或内容发生变化，则认为有更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        console.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">info</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">&#39;更新了&#39;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">, {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">            oldScript: [</span><span style="${ssrRenderStyle({ "color": "#F97583" })}">...</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">scriptHashes],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">            newScript: [</span><span style="${ssrRenderStyle({ "color": "#F97583" })}">...</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">newScriptHashes],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 清除定时器</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">clearInterval</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(timer);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 提示用户更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">updateNotice</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    } </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">else</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 没有更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        console.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">info</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">&#39;没更新&#39;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">, {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">            oldScript: [</span><span style="${ssrRenderStyle({ "color": "#F97583" })}">...</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">scriptHashes],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 每60秒检查一次是否有新的脚本标签更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">timer </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">setInterval</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(compareScriptHashes, </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">60000</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 存储当前脚本标签的哈希值集合</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#D73A49" })}">let</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> scriptHashes </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">new</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">Set</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#D73A49" })}">let</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> timer </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">undefined</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}">/**</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> * 从首页获取脚本标签的哈希值集合</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> * </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">@returns</span><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">{Promise&lt;Set&lt;string&gt;&gt;}</span><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> 返回包含脚本标签的哈希值的集合</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#D73A49" })}">async</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">function</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">fetchScriptHashes</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 获取首页HTML内容</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">const</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">html</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">await</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">fetch</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">&#39;/&#39;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">).</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">then</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">((</span><span style="${ssrRenderStyle({ "color": "#E36209" })}">res</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">) </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> res.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">text</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">());</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 正则表达式匹配所有&lt;script&gt;标签</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">const</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">scriptRegex</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">/&lt;</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">script</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">?:</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">\\s</span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">+</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">[</span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">^&gt;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">]</span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">*</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">)</span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">?&gt;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(.</span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">*?</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">)</span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">&lt;</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">/script</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">\\s</span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">*</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">&gt;/</span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">gi</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 获取匹配到的所有&lt;script&gt;标签内容</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    const scripts </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> html.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">match</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(scriptRegex) </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">??</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> [];</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 将脚本标签内容存入集合并返回</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    return </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">new</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">Set</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(scripts);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}">/**</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> * 比较当前脚本标签的哈希值集合与新获取的集合，检测是否有更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#D73A49" })}">async</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">function</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">compareScriptHashes</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 获取新的脚本标签哈希值集合</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">const</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">newScriptHashes</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">await</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">fetchScriptHashes</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">();</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">if</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> (scriptHashes.size </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">===</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">0</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 初次运行时，存储当前脚本标签哈希值</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        scriptHashes </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> newScriptHashes;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    } </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">else</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">if</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> (</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        scriptHashes.size </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">!==</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> newScriptHashes.size </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">||</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">!</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">[</span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">...</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">scriptHashes].</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">every</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">((</span><span style="${ssrRenderStyle({ "color": "#E36209" })}">hash</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">) </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> newScriptHashes.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">has</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(hash))</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    ) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 如果脚本标签数量或内容发生变化，则认为有更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        console.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">info</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">&#39;更新了&#39;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">, {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">            oldScript: [</span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">...</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">scriptHashes],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">            newScript: [</span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">...</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">newScriptHashes],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 清除定时器</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">clearInterval</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(timer);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 提示用户更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">updateNotice</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    } </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">else</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 没有更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        console.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">info</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">&#39;没更新&#39;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">, {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">            oldScript: [</span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">...</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">scriptHashes],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 每60秒检查一次是否有新的脚本标签更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">timer </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">setInterval</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(compareScriptHashes, </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">60000</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">);</span></span></code></pre></div><h3 id="_2、利用http协议的缓存机制-比较etag或last-modified前后是否一致" tabindex="-1">2、利用HTTP协议的缓存机制，比较Etag或last-modified前后是否一致 <a class="header-anchor" href="#_2、利用http协议的缓存机制-比较etag或last-modified前后是否一致" aria-label="Permalink to &quot;2、利用HTTP协议的缓存机制，比较Etag或last-modified前后是否一致&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#F97583" })}">let</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> versionTag </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">null</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">; </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 版本标识</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#F97583" })}">let</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> timer </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">undefined</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}">/**</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> * 获取首页的 ETag 或 Last-Modified 值，作为当前版本标识</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> * </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">@returns</span><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">{Promise&lt;string|null&gt;}</span><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> 返回 ETag 或 Last-Modified 值</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#F97583" })}">const</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">getVersionTag</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">async</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> () </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">const</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">response</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">await</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">fetch</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">&#39;/&#39;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">, {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        cache: </span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">&#39;no-cache&#39;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">return</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> response.headers.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">get</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">&#39;etag&#39;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">) </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">||</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> response.headers.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">get</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">&#39;last-modified&#39;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">};</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}">/**</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> * 比较当前的 ETag 或 Last-Modified 值与最新获取的值</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#F97583" })}">const</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">compareTag</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">async</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> () </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">const</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">newVersionTag</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">await</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">getVersionTag</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">();</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">if</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> (versionTag </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">===</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">null</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 初次运行时，存储当前的 ETag 或 Last-Modified 值</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        versionTag </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> newVersionTag;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    } </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">else</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">if</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> (versionTag </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">!==</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> newVersionTag) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 如果 ETag 或 Last-Modified 发生变化，则认为有更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        console.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">info</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">&#39;更新了&#39;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">, {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">            oldVersionTag: versionTag,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">            newVersionTag: newVersionTag,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 清除定时器</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">clearInterval</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(timer);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 提示用户更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">updateNotice</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    } </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">else</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 没有更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        console.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">info</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">&#39;没更新&#39;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">, {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">            oldVersionTag: versionTag,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">            newVersionTag: newVersionTag,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">        });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">};</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 每60秒检查一次是否有新的 ETag 或 Last-Modified 值</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">timer </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">setInterval</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(compareTag, </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">60000</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#D73A49" })}">let</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> versionTag </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">null</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">; </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 版本标识</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#D73A49" })}">let</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> timer </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">undefined</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}">/**</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> * 获取首页的 ETag 或 Last-Modified 值，作为当前版本标识</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> * </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">@returns</span><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">{Promise&lt;string|null&gt;}</span><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> 返回 ETag 或 Last-Modified 值</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#D73A49" })}">const</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">getVersionTag</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">async</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> () </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">const</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">response</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">await</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">fetch</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">&#39;/&#39;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">, {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        cache: </span><span style="${ssrRenderStyle({ "color": "#032F62" })}">&#39;no-cache&#39;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">return</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> response.headers.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">get</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">&#39;etag&#39;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">) </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">||</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> response.headers.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">get</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">&#39;last-modified&#39;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">};</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}">/**</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> * 比较当前的 ETag 或 Last-Modified 值与最新获取的值</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}"> */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#D73A49" })}">const</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">compareTag</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">async</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> () </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">const</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">newVersionTag</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">await</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">getVersionTag</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">();</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">if</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> (versionTag </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">===</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">null</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 初次运行时，存储当前的 ETag 或 Last-Modified 值</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        versionTag </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> newVersionTag;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    } </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">else</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">if</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> (versionTag </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">!==</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> newVersionTag) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 如果 ETag 或 Last-Modified 发生变化，则认为有更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        console.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">info</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">&#39;更新了&#39;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">, {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">            oldVersionTag: versionTag,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">            newVersionTag: newVersionTag,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 清除定时器</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">clearInterval</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(timer);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 提示用户更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">updateNotice</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    } </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">else</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 没有更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        console.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">info</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">&#39;没更新&#39;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">, {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">            oldVersionTag: versionTag,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">            newVersionTag: newVersionTag,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">        });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">};</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// 每60秒检查一次是否有新的 ETag 或 Last-Modified 值</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">timer </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">setInterval</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(compareTag, </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">60000</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">);</span></span></code></pre></div><h3 id="_3、第三方插件" tabindex="-1">3、第三方插件 <a class="header-anchor" href="#_3、第三方插件" aria-label="Permalink to &quot;3、第三方插件&quot;">​</a></h3><ul><li>version-polling</li></ul><p>扒一扒他的源码</p><ul><li>首先初始化一个 VersionPolling 类，init方法获取响应的 etag 标识并存进localstorage。然后调用start方法。 <img${ssrRenderAttr("src", _imports_1)} alt="img_2.png"></li><li>同步创建一个web worker，通过监听etag变化，然后使用postmessage通知主页面进程。 <img${ssrRenderAttr("src", _imports_2)} alt="img_3.png"><img${ssrRenderAttr("src", _imports_3)} alt="img_4.png"></li><li>页面失活时停止监听 <img${ssrRenderAttr("src", _imports_4)} alt="img_1.png"></li></ul></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("note/case/部署更新通知.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const ______ = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  ______ as default
};
