import { ssrRenderAttrs, ssrRenderAttr } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.cc2b3d55.js";
const _imports_0 = "/assets/img.07ef9d0a.png";
const _imports_1 = "/assets/img_1.26dc9416.png";
const __pageData = JSON.parse('{"title":"性能优化","description":"","frontmatter":{"hidden":true},"headers":[],"relativePath":"front/performance/assets/index.md","filePath":"front/performance/assets/index.md","lastUpdated":1701338838000}');
const _sfc_main = { name: "front/performance/assets/index.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="性能优化" tabindex="-1">性能优化 <a class="header-anchor" href="#性能优化" aria-label="Permalink to &quot;性能优化&quot;">​</a></h1><p><img${ssrRenderAttr("src", _imports_0)} alt="img.png"></p><p><img${ssrRenderAttr("src", _imports_1)} alt="img_1.png"></p><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><ul><li><a href="./性能指标.html">性能指标</a></li><li><a href="./优化手段.html">优化手段</a></li><li><a href="./性能上报方式.html">性能上报方式</a></li></ul><h2 id="性能优化常见的场景" tabindex="-1">性能优化常见的场景 <a class="header-anchor" href="#性能优化常见的场景" aria-label="Permalink to &quot;性能优化常见的场景&quot;">​</a></h2><ul><li>大型虚拟列表 - 虚拟滚动</li><li>减少大型不可变数据的响应性开销</li><li>避免不必要的组件抽象 - 组件实例比普通 DOM 节点要昂贵得多</li></ul><p>业务拆解 - 微前端拆分</p><h2 id="性能指标" tabindex="-1">性能指标 <a class="header-anchor" href="#性能指标" aria-label="Permalink to &quot;性能指标&quot;">​</a></h2><ol><li>页面加载速度：指页面从开始加载到完全加载完成所需的时间。页面加载速度越快，用户体验就越好。</li><li>资源加载时间：指页面中各个资源文件（如HTML、CSS、JavaScript、图片等）的加载时间。资源加载时间越短，页面响应速度就越快。</li><li>渲染速度：指页面元素在浏览器中渲染的速度。渲染速度越快，用户看到的页面内容就越快。</li><li>页面大小：指页面文件的大小，包括HTML、CSS、JavaScript、图片等资源文件的大小。页面大小越小，下载和加载速度就越快。</li><li>代码质量：指前端代码的质量，包括可读性、可维护性、可扩展性等。代码质量越高，开发效率和代码稳定性就越好。</li><li>响应时间：指页面对于用户交互的响应速度。响应时间越快，用户体验就越好。</li><li>移动端适配：指前端页面在不同设备（如手机、平板等）上的适配效果。移动端适配越好，用户体验就越好。</li><li>安全性：指前端页面的安全性，包括跨站脚本攻击（XSS）、跨站请求伪造（CSRF）等安全问题的防范。安全性越高，用户体验和网站安全性就越好。</li></ol><h2 id="页面性能指标-性能指标定义" tabindex="-1">页面性能指标 - 性能指标定义 <a class="header-anchor" href="#页面性能指标-性能指标定义" aria-label="Permalink to &quot;页面性能指标 - 性能指标定义&quot;">​</a></h2><h3 id="含义说明" tabindex="-1">含义说明 <a class="header-anchor" href="#含义说明" aria-label="Permalink to &quot;含义说明&quot;">​</a></h3><ul><li>页面加载时间：指从页面开始加载到页面完全加载完成所需的时间。</li><li>白屏时间：指浏览器发起请求到开始显示第一个页面元素的时间。</li><li>首屏时间：指用户可以看到页面上主要内容所需要的时间。</li><li>整页时间：指从开始加载到所有元素都被加载完成后，在一定时间内（通常为2秒）仍然没有网络活动的时间。</li><li>DOMContentLoaded时间：指DOM结构完全解析完成的时间。</li><li>Load时间：指页面完成所有资源加载和渲染的时间。</li></ul><hr><h2 id="有哪些工具可以监测和分析前端性能优化指标" tabindex="-1">有哪些工具可以监测和分析前端性能优化指标？ <a class="header-anchor" href="#有哪些工具可以监测和分析前端性能优化指标" aria-label="Permalink to &quot;有哪些工具可以监测和分析前端性能优化指标？&quot;">​</a></h2><ol><li>Lighthouse：是一个开源的自动化工具，用于帮助改进网络应用的质量。它可以评估页面性能、可访问性、无障碍性、SEO等方面，并提供改进建议。</li><li>SpeedCurve：可以帮助追踪自己的性能表现，以及竞争对手的性能表现。它提供了一个完整的性能管理平台，包括网页速度分析、性能日志、性能预算等功能。</li><li>Pingdom：在Pingdom输入URL地址，即可测试页面加载速度，分析并找出性能瓶颈。它还提供了实时监控、报告和警报等功能。</li><li>PageSpeed Insights：提供免费服务，可以分析网页的内容，提出建议，加快网页的速度。它为您提供了关键指标，如第一个内容绘制，总阻塞时间和更多。</li><li>WebPageTest：是一个在线的免费性能评测网站，支持IE，Chrome，使用真正的浏览器(IE和Chrome)和真实的消费者连接速度，从全球多个地点运行免费网站速度测试。可以运行简单的测试或执行高级测试，包括多步骤事务、视频捕获、内容阻塞等等。</li><li>Chrome DevTools：是Chrome浏览器自带的一个开发者工具，可以在浏览器中实时监测和优化网页性能。</li><li>New Relic：是一个完整的应用性能管理(APM)解决方案，可以监测和分析网页性能和应用程序性能。</li><li>WebPageTest API：是一个可以编程访问WebPageTest的API，可以在自己的网站或应用程序中使用WebPageTest的功能。</li></ol><h2 id="方向" tabindex="-1">方向 <a class="header-anchor" href="#方向" aria-label="Permalink to &quot;方向&quot;">​</a></h2><p>性能优化是一个纬度比较大的方向</p><p>可以从http、项目本身以及加钱解法（增加服务起配置）几个方面</p><h3 id="http" tabindex="-1">http <a class="header-anchor" href="#http" aria-label="Permalink to &quot;http&quot;">​</a></h3><ul><li>dns预解析</li><li>http2.0</li><li>http缓存</li></ul><h3 id="项目" tabindex="-1">项目 <a class="header-anchor" href="#项目" aria-label="Permalink to &quot;项目&quot;">​</a></h3><ul><li>降低http请求数</li></ul><p>浏览器允许同时并发请求数目是有限制的（一般4-7个？），因此，后边的资源需要等待前面的资源加载后才能开始加载（阻塞）。</p><ul><li>精灵图</li><li>webpack、vite等打包工具合并资源（小图base64）</li><li>路由懒加载</li><li>组件懒加载</li><li>图片懒加载</li><li>cdn分发</li><li>开启gzip</li><li>服务端渲染</li></ul><h3 id="加钱解法" tabindex="-1">加钱解法 <a class="header-anchor" href="#加钱解法" aria-label="Permalink to &quot;加钱解法&quot;">​</a></h3><p>无脑增加服务器配置（带宽...）</p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("front/performance/assets/index.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const index = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  index as default
};
