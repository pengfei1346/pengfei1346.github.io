import { ssrRenderAttrs, ssrRenderAttr, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.cc2b3d55.js";
const _imports_0 = "/assets/img_7.1e9e974c.png";
const _imports_1 = "/assets/img_6.8e2d7886.png";
const _imports_2 = "/assets/img_5.35a1b6ae.png";
const _imports_3 = "/assets/vue_错误处理机制.b6bf62a5.webp";
const _imports_4 = "/assets/img.3aa17818.png";
const _imports_5 = "/assets/img_1.4101f734.png";
const _imports_6 = "/assets/img_2.f0d3dd00.png";
const _imports_7 = "/assets/img_3.3f50bc86.png";
const __pageData = JSON.parse('{"title":"前端监控系统","description":"","frontmatter":{"sidebar":null,"title":"前端监控系统","step":6,"isTimeLine":true,"date":"2020-09-14T00:00:00.000Z","tags":["工程化","CI/CD"],"categories":["工程化"]},"headers":[],"relativePath":"front/CICD/前端监控系统.md","filePath":"front/CICD/前端监控系统.md","lastUpdated":1745162134000}');
const _sfc_main = { name: "front/CICD/前端监控系统.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="前端监控系统" tabindex="-1">前端监控系统 <a class="header-anchor" href="#前端监控系统" aria-label="Permalink to &quot;前端监控系统&quot;">​</a></h1><h2 id="前端监控系统包括哪些" tabindex="-1">前端监控系统包括哪些？ <a class="header-anchor" href="#前端监控系统包括哪些" aria-label="Permalink to &quot;前端监控系统包括哪些？&quot;">​</a></h2><p>对于前端监控来说，大致可以分成三个方向：数据监控、性能监控、异常监控。</p><p><strong>数据监控 / 埋点</strong></p><p><img${ssrRenderAttr("src", _imports_0)} alt="img_7.png"></p><p>数据监控即通过数据分析用户行为，常见的监控数据包括：PV/UV、页面停留时长、通过什么入口进入、在页面触发了什么行为等。统计这些数据就是为了清楚用户来源，拓宽产品的推广渠道；了解用户在页面停留的时间情况，针对停留较短的页面进行分析改进。也就是我们常说的：who(uuid)、when(time)、from where(referrer)、where(x,y)、what (自定义拓展数据)串成的用户行为路径。</p><h3 id="性能监控" tabindex="-1"><strong>性能监控</strong> <a class="header-anchor" href="#性能监控" aria-label="Permalink to &quot;**性能监控**&quot;">​</a></h3><p><img${ssrRenderAttr("src", _imports_1)} alt="img_6.png"></p><p>性能监控主要是针对前端进行监控，比如不同用户在不同地区使用不同机型下的首屏加载时间、页面的白屏时间、静态资源下载时间等数据。</p><p>通过针对这些性能数据进行监控，可以大概反映前端性能的好坏，根据性能监测的结果可以进一步的去优化前端性能。</p><p>监测应用程序的性能指标，如页面加载时间、资源加载时间、请求耗时等。通过监控性能，可以识别潜在的性能瓶颈，优化应用程序的加载速度和响应时间。</p><h3 id="异常监控-错误上报" tabindex="-1"><strong>异常监控 &amp; 错误上报</strong> <a class="header-anchor" href="#异常监控-错误上报" aria-label="Permalink to &quot;**异常监控 &amp; 错误上报**&quot;">​</a></h3><p>前端代码在执行过程中也可能会发生异常，因此需要引入异常监控例如 sentry 等工具及时的上报异常情况，可以避免线上故障的发上。常见的异常包括：Javascript 的异常监控、css 的异常监控等。</p><p><strong>异常监控</strong></p><p><img${ssrRenderAttr("src", _imports_2)} alt="img_5.png"></p><p><img${ssrRenderAttr("src", _imports_3)} alt="截图"></p><p>异常监测前端应用程序中的异常情况，如 JavaScript 错误、未捕获的异常、网络错误等。通过监控异常，可以及时定位并解决问题，提高应用程序的稳定性和用户体验。</p><p>错误类型：</p><p>2.1 语法错误 比如常见的单词拼写错误，中英文符号错误等，然后就是 语法错误是无法被 try-catch 捕获的，但其实如果存在语法错误一般编写代码的软件直接就会爆红，所以语法错误在可发阶段就可以发现，一般不会发布到线上环境。 2.2 同步错误 同步错误指的是在js同步执行过程中的错误，比如变量未定义等，同步错误是可以被 try-catch 给捕获到的。</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">try { const name = &#39;zs&#39;; console.log(nam); } catch (error) { console.log(&#39;同步错误！&#39;) // 会输出！ }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">try { const name = &#39;zs&#39;; console.log(nam); } catch (error) { console.log(&#39;同步错误！&#39;) // 会输出！ }</span></span></code></pre></div><p>2.3 错误捕获 window.onerror - 每当代码在 runtime 时发生错误时，JavaScript 引擎就会抛出一个 Error 对象，并且触发 window.onerror 函数。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">window.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">onerror</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> (</span><span style="${ssrRenderStyle({ "color": "#FFAB70" })}">msg</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">, </span><span style="${ssrRenderStyle({ "color": "#FFAB70" })}">url</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">, </span><span style="${ssrRenderStyle({ "color": "#FFAB70" })}">line</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">, </span><span style="${ssrRenderStyle({ "color": "#FFAB70" })}">col</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">, </span><span style="${ssrRenderStyle({ "color": "#FFAB70" })}">err</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">) </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">  console.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">log</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(err)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">window.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">onerror</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E36209" })}">msg</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">, </span><span style="${ssrRenderStyle({ "color": "#E36209" })}">url</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">, </span><span style="${ssrRenderStyle({ "color": "#E36209" })}">line</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">, </span><span style="${ssrRenderStyle({ "color": "#E36209" })}">col</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">, </span><span style="${ssrRenderStyle({ "color": "#E36209" })}">err</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">) </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">  console.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">log</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(err)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">}</span></span></code></pre></div><p>unhandledrejection- 在我们使用 Promise 的时候，如果发生错误而我们没有去 catch 的话，window.onerror 是不能监控到这个错误的。但是这个时候，JavaScript 引擎会触发 unhandledrejection 事件，只要我们监听这个事件，那么就能够监控到 Promise 产生的错误。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">window.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">addEventListener</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#9ECBFF" })}">&#39;unhandledrejection&#39;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">, </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">function</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "color": "#FFAB70" })}">err</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">  console.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">log</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(err)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">window.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">addEventListener</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#032F62" })}">&#39;unhandledrejection&#39;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">, </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">function</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(</span><span style="${ssrRenderStyle({ "color": "#E36209" })}">err</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">  console.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">log</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(err)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">})</span></span></code></pre></div><h2 id="为什么要做前端监控系统" tabindex="-1">为什么要做前端监控系统？ <a class="header-anchor" href="#为什么要做前端监控系统" aria-label="Permalink to &quot;为什么要做前端监控系统？&quot;">​</a></h2><h3 id="不同的角度对于系统的关注点不同" tabindex="-1">不同的角度对于系统的关注点不同 <a class="header-anchor" href="#不同的角度对于系统的关注点不同" aria-label="Permalink to &quot;不同的角度对于系统的关注点不同&quot;">​</a></h3><p><strong>站在产品的视角，经常会问如下几个问题：</strong></p><ul><li>产品有没有用户使用</li><li>用户用得怎么样</li><li>系统会不会经常出现异常</li><li>如何更好地满足用户需求服务用户</li></ul><p><strong>当站在技术视角时，经常会问如下几个问题：</strong></p><ul><li>系统出现异常的频率如何</li><li>异常出现后如何快速进行定位追踪</li><li>如何分析解决问题</li></ul><p><strong>而当站在老板的视角时，问题可能又会变为：</strong></p><ul><li>我的存量用户多少，未来还有多少潜力</li><li>多少用户在系统内进行了消费</li></ul><p><img${ssrRenderAttr("src", _imports_4)} alt="img.png"></p><h1 id="参考方案-todo-现有监控系统字段整理" tabindex="-1">参考方案 -todo ：现有监控系统字段整理 <a class="header-anchor" href="#参考方案-todo-现有监控系统字段整理" aria-label="Permalink to &quot;参考方案 -todo ：现有监控系统字段整理&quot;">​</a></h1><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">(1) 页面进入 (pageIn)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}"></span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">{ </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">   title: &#39;政采云&#39;, // document title </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">   pre: &#39;&#39;, // referrer </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">   utm-url: &#39;a.b.c.d.e&#39;, // url 中获取的 utm </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">   utm-cnt: &#39;a.b.0.0.e&#39;, // 这个页面的 utm a b 值 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">   scr: &#39;1400x900&#39;, // 分辨率 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">   os: &#39;mac&#39;, // 操作系统 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">   k: &#39;webkit&#39;, // 浏览器内核 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">   b: &#39;chrome/70&#39;, // 浏览器及版本 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">   lver: &#39;1.0.0&#39;, // js 版本 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">   createTime: &#39;&#39;, // 当前时间的时间戳（用户本地时间）</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">   logType: 1 // 页面进入发送数据 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}"></span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">(2) 事件触发 (Event)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">{ </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">  evt: &#39;click&#39;, // 事件类型 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">  utm-cnt: &#39;a.b.c.d.e&#39;, // utm 值 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">  bdata: &#39;{&quot;test&quot;: &quot;12345&quot; }&#39;, // 业务数据 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">  mx: xx, // 鼠标点击位置 x </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">  my: xx, // 鼠标点击位置 y </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">  lver: &#39;1.0.0&#39;, // js 版本 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">  logType: 2 // 数据类型 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}"></span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">(3) 页面离开 (pageOut)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">{ </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}"> title: &#39;政采云&#39;, // document title </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}"> pre: &#39;&#39;, // referrer </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}"> utm-url: &#39;a.b.c.d.e&#39;, // url 中获取的 utm </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}"> utm-cnt: &#39;a.b.0.0.e&#39;, // 这个页面的 utm a b 值 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}"> lver: &#39;1.0.0&#39;, // js 版本 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">  createTime: &#39;&#39;, // 当前时间的时间戳（用户本地时间）</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}"> logType: 3 // 页面离开发送数据 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#e1e4e8" })}">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">(1) 页面进入 (pageIn)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}"></span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">{ </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">   title: &#39;政采云&#39;, // document title </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">   pre: &#39;&#39;, // referrer </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">   utm-url: &#39;a.b.c.d.e&#39;, // url 中获取的 utm </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">   utm-cnt: &#39;a.b.0.0.e&#39;, // 这个页面的 utm a b 值 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">   scr: &#39;1400x900&#39;, // 分辨率 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">   os: &#39;mac&#39;, // 操作系统 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">   k: &#39;webkit&#39;, // 浏览器内核 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">   b: &#39;chrome/70&#39;, // 浏览器及版本 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">   lver: &#39;1.0.0&#39;, // js 版本 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">   createTime: &#39;&#39;, // 当前时间的时间戳（用户本地时间）</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">   logType: 1 // 页面进入发送数据 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}"></span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">(2) 事件触发 (Event)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">{ </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">  evt: &#39;click&#39;, // 事件类型 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">  utm-cnt: &#39;a.b.c.d.e&#39;, // utm 值 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">  bdata: &#39;{&quot;test&quot;: &quot;12345&quot; }&#39;, // 业务数据 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">  mx: xx, // 鼠标点击位置 x </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">  my: xx, // 鼠标点击位置 y </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">  lver: &#39;1.0.0&#39;, // js 版本 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">  logType: 2 // 数据类型 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}"></span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">(3) 页面离开 (pageOut)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">{ </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}"> title: &#39;政采云&#39;, // document title </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}"> pre: &#39;&#39;, // referrer </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}"> utm-url: &#39;a.b.c.d.e&#39;, // url 中获取的 utm </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}"> utm-cnt: &#39;a.b.0.0.e&#39;, // 这个页面的 utm a b 值 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}"> lver: &#39;1.0.0&#39;, // js 版本 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">  createTime: &#39;&#39;, // 当前时间的时间戳（用户本地时间）</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}"> logType: 3 // 页面离开发送数据 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292e" })}">}</span></span></code></pre></div><p><strong>浏览器加载过程</strong></p><p><img${ssrRenderAttr("src", _imports_5)} alt="img_1.png"></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#F97583" })}">const</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">getPerformanceData</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> () </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">  </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">let</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> performance </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> {};</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">  </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">try</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    performance </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> window.performance.</span><span style="${ssrRenderStyle({ "color": "#B392F0" })}">getEntries</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">()[</span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">0</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">];</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">  } </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">catch</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> (e) {}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">  </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">const</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">domainLookupEnd</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">0</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">domainLookupStart</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">0</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">connectStart</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">0</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">connectEnd</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">0</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">requestStart</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">0</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">responseStart</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">0</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// etc...</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">  } </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> performance;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">  </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">const</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">dns</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">~~</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(domainLookupEnd </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">-</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> domainLookupStart);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">  </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">const</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">tcp</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">~~</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(connectEnd </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">-</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> connectStart);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">  </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">const</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#79B8FF" })}">ttfb</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">~~</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">(responseStart </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">-</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> requestStart);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">  </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// etc...</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">  </span><span style="${ssrRenderStyle({ "color": "#F97583" })}">return</span><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">    </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// TODO...</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">  };</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E1E4E8" })}">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#D73A49" })}">const</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">getPerformanceData</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> () </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">  </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">let</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> performance </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> {};</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">  </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">try</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    performance </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> window.performance.</span><span style="${ssrRenderStyle({ "color": "#6F42C1" })}">getEntries</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">()[</span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">0</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">];</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">  } </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">catch</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> (e) {}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">  </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">const</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">domainLookupEnd</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">0</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">domainLookupStart</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">0</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">connectStart</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">0</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">connectEnd</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">0</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">requestStart</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">0</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">responseStart</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">0</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// etc...</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">  } </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> performance;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">  </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">const</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">dns</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">~~</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(domainLookupEnd </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">-</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> domainLookupStart);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">  </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">const</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">tcp</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">~~</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(connectEnd </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">-</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> connectStart);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">  </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">const</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#005CC5" })}">ttfb</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">=</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">~~</span><span style="${ssrRenderStyle({ "color": "#24292E" })}">(responseStart </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">-</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> requestStart);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">  </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// etc...</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">  </span><span style="${ssrRenderStyle({ "color": "#D73A49" })}">return</span><span style="${ssrRenderStyle({ "color": "#24292E" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">    </span><span style="${ssrRenderStyle({ "color": "#6A737D" })}">// TODO...</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">  };</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#24292E" })}">};</span></span></code></pre></div><h2 id="政采云-埋点菜单" tabindex="-1">政采云 埋点菜单 <a class="header-anchor" href="#政采云-埋点菜单" aria-label="Permalink to &quot;政采云 埋点菜单&quot;">​</a></h2><p><img${ssrRenderAttr("src", _imports_6)} alt="img_2.png"></p><p><img${ssrRenderAttr("src", _imports_7)} alt="img_3.png"></p><ul><li>PV/UV 排序或趋势（PV：PageView，页面浏览次数，用户每打开一次记录一次，多次打开同一页面将累计多次；UV：UserView，浏览页面人数；下文中将直接用PV/UV；） <ul><li>全站的PV/UV单日趋势图：分时段查看访问量的高峰和低谷；</li><li>PV/UV排序：查看Top页面的PV/UV</li><li>按页面、时间区间查询PV/UV</li></ul></li><li>漏斗分析：按流程排序每个阶段的人数，计算出转化率；</li><li>路径分析：查询各个页面的来源和去向；</li><li>热图分析 <ul><li>点击热图：按钮及链接点击的热图；</li><li>滚屏热图（即将上线）：用户页面滚屏触达率；</li></ul></li><li>用户画像（即将上线）：针对重点用户的回访次数、浏览路径、用户身份、所在地、操作系统、浏览器等详细信息查询；</li><li>自定义看板：可选择首页看板的展示项；</li></ul><h3 id="用户行为相关的四种数据。" tabindex="-1">用户行为相关的四种数据。 <a class="header-anchor" href="#用户行为相关的四种数据。" aria-label="Permalink to &quot;用户行为相关的四种数据。&quot;">​</a></h3><ul><li>PV：通过计算日志中所有进入页面日志条数的总和我们可以得到 pv</li><li>UV：以唯一 uuid 将 pv 进行过滤后可以得到 uv ；</li><li>按钮点击数：直接通过统计按钮点击事件上报的日志条数可以得到按钮的点击量；</li><li>链接点击数：与按钮点击有所不同，按钮点击是通过单独发送的点击事件上报来进行统计，而链接点击往往导致的是一次页面跳转，此处即为从电子卖场首页离开进入了搜索结果页，此时我们所统计的就是搜索结果页的页面进入事件中的 utmUrl（即来源按钮的唯一识别码）值，判断出该次搜索结果页的进入是来源于首页常见搜索关键词的点击，从而统计出该位置的的链接点击量。</li><li>用户停留时长</li></ul></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("front/CICD/前端监控系统.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const ______ = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  ______ as default
};
